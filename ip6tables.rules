*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
:HARDPASS - [0:0]
:SYNFLOOD - [0:0]
:TCP - [0:0]
:UDP - [0:0]
# Allow loopback
-A INPUT -i lo -j ACCEPT
# Allow established
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
# Drop invalid
-A INPUT -m conntrack --ctstate INVALID -j DROP
# Allow ping
-A INPUT -p ipv6-icmp -m icmp6 --icmpv6-type 128 -m conntrack --ctstate NEW -j ACCEPT
# Allow IPv6 ICMP for router advertisements (add needed subnets)
-A INPUT -s fe80::/10 -p ipv6-icmp -j ACCEPT
# Jump to tcp table for new tcp
-A INPUT -p tcp -m tcp --tcp-flags ACK,FIN,RST,SYN SYN -m conntrack --ctstate NEW -j TCP
# Jump to udp table for new udp
-A INPUT -p udp -m conntrack --ctstate NEW -j UDP
# Otherwise reject
-A INPUT -j HARDPASS
# Allow established
# -A FORWARD -m conntrack --ctstate DNAT,ESTABLISHED,RELATED -j ACCEPT
# Drop invalid
# -A FORWARD -m conntrack --ctstate INVALID -j DROP
# Otherwise reject
#-A FORWARD -j HARDPASS
# Reject appropriately for each protocol
-A HARDPASS -p tcp -j REJECT --reject-with tcp-reset
-A HARDPASS -p udp -j REJECT --reject-with icmp6-port-unreachable
-A HARDPASS -j REJECT --reject-with icmp6-port-unreachable
# Protect from SYN flood
-A SYNFLOOD -m limit --limit 64/min --limit-burst 64 -j RETURN
-A SYNFLOOD -j HARDPASS
# Check for SYN flood
-A TCP -j SYNFLOOD
# Allow:
# - SSH (22)
-A TCP -p tcp -m multiport --dports 22 -j ACCEPT
# Allow:
# - OpenVPN (1194)
# -A UDP -p udp -m multiport --dports 1194 -j ACCEPT
# Allow DHCPv6 (add needed subnets)
-A UDP -s fe80::/10 -p udp -m udp --dport 546 -m state --state NEW -j ACCEPT
COMMIT
*raw
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A PREROUTING -m rpfilter -j ACCEPT
-A PREROUTING -j DROP
COMMIT
