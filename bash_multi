#!/usr/bin/env bash

function bash_multi() {
    for dep in TODO; do
        if [[ -z $(command -v $dep) ]]; then
            echo "$dep is not installed"
            return 3
        fi
    done; unset dep

    bash_multi_cleanup() {
        unset args flag help store
        unset -f bash_multi_cleanup bash_multi_usage
    }

    bash_multi_usage() {
        echo "Usage: bash_multi [OPTIONS]"
        echo
        echo "TODO"
        echo
        echo "Options:"
        echo "    -f, --flag         Example flag"
        echo "    -h, --help         Display this help message"
        echo "    -s, --STORE=VAL    Example for storing cli arg"
        echo
        bash_multi_cleanup
    }

    declare -a args
    unset flag help store

    while [[ $# -gt 0 ]]; do
        case "$1" in
            "--") shift && args+=("$@") && break ;;
            "-f"|"--flag") flag="true" ;;
            "-h"|"--help") help="true" ;;
            "-s"|"--store"*)
                case "$1" in
                    "--"*"="*)
                        arg="${1#*=}"
                        [[ -z $arg ]] && bash_multi_usage && return 1
                        ;;
                    *)
                        shift
                        [[ $# -eq 0 ]] && bash_multi_usage && return 1
                        arg="$1"
                        ;;
                esac
                store="$arg"
                ;;
            *) args+=("$1") ;;
        esac
        shift
    done
    [[ -z ${args[@]} ]] || set -- "${args[@]}"

    [[ -n $help ]] && bash_multi_usage && return 0
    [[ $# -eq 0 ]] && bash_multi_usage && return 2

    for arg in "$@"; do echo "$arg"; done

    bash_multi_cleanup
}

if [[ -n ${BASH_SOURCE[0]} ]]; then
    case "$0" in
        *"bash") ;;
        *) bash_multi "$@" ;;
    esac
fi
