#!/usr/bin/env bash

todo() {
    echo -n # TODO
}

usage() {
    echo "Usage: ${0/*\//} [OPTIONS] <arg1>... [argN]"
    echo
    echo "TODO"
    echo
    echo "Options:"
    echo "    -f, --flag"
    echo "        Example flag"
    echo
    echo "    -f, --flag=FLAG"
    echo "        Example for storing cli arg"
    echo
    echo "    -h, --help"
    echo "        Display this help message"
    echo
    echo "    -p, --parallel"
    echo "        Run using parallel"
    echo
    echo "    -t, --threads=NUM"
    echo "        Use the specied number of thread if running in"
    echo "        parallel (default: $threads)"
    echo
    exit $1
}

declare -a args
unset flag parallel
threads="32"

while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-f"|"--flag") flag="true" ;;
        "-f"|"--flag") shift; [[ $# -gt 0 ]] || usage 1
            flag="--flag $1"
            ;;
        "-h"|"--help") usage 0 ;;
        "-p"|"--parallel") parallel="true" ;;
        "-t"|"--threads") shift; [[ $# -gt 0 ]] || usage 1
            threads="$1"
            ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

[[ $# -ge 1 ]] || usage 1

if [[ -n $parallel ]] && [[ -z $(command -v parallel) ]]; then
    echo "Parallel is not installed, falling back to default behavior"
    unset parallel
fi

if [[ -n $parallel ]]; then
    source $(command -v env_parallel.bash)
    env_parallel --eta -P $threads todo {} ::: $@
else
    args=($@)
    let "count = 1"
    let "total = ${#args[@]}"
    for arg in "${args[@]}"; do
        echo -e "$count/$total\r\e[1A"
        todo $arg
        let "count += 1"
    done; unset arg
fi
