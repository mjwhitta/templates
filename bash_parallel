#!/usr/bin/env bash

err() { echo -e "\e[31m[!] $@\e[0m"; }

info() { echo -e "\e[32m[+] $@\e[0m"; }

todo() {
    info "$1" # TODO
}

usage() {
    echo "Usage: ${0/*\//} [OPTIONS] <arg1>... [argN]"
    echo
    echo "TODO"
    echo
    echo "Options:"
    echo "    -f, --flag           Example flag"
    echo "    -f, --flag=FLAG      Example for storing cli arg"
    echo "    -h, --help           Display this help message"
    echo "    -p, --parallel       Run using parallel"
    echo "    -t, --threads=NUM    Use the specied number of threads"
    echo "                         if running in parallel (default:"
    echo "                         $threads)"
    echo
    exit $1
}

warn() { echo -e "\e[33m[-] $@\e[0m"; }

declare -a args
unset flag parallel
threads="32"

while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-f"|"--flag") flag="true" ;;
        "-f"|"--flag"*)
            case "$1" in
                "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || usage 1 ;;
                *) shift; [[ $# -gt 0 ]] || usage 1; arg="$1" ;;
            esac
            flag="--flag $arg"
            ;;
        "-h"|"--help") usage 0 ;;
        "-p"|"--parallel") parallel="true" ;;
        "-t"|"--threads"*)
            case "$1" in
                "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || usage 1 ;;
                *) shift; [[ $# -gt 0 ]] || usage 1; arg="$1" ;;
            esac
            threads="$arg"
            ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

[[ $# -ge 1 ]] || usage 2

if [[ -n $parallel ]]; then
    if [[ -z $(command -v parallel) ]] ||
       [[ -z $(command -v env_parallel.bash) ]]
    then
        warn "Parallel is not installed, using default behavior"
        unset parallel
    fi
fi

declare -a dataset=($@)
let "total = ${#dataset[@]}"

if [[ -n $parallel ]]; then
    source $(command -v env_parallel.bash)
    info "$total jobs to run"
    env_parallel -P $threads todo {} ::: ${dataset[@]}
    # env_parallel --eta -P $threads todo {} ::: ${dataset[@]}
else
    let "count = 1"
    for data in "${dataset[@]}"; do
        echo -en "[$count/$total]                              \r" >&2
        todo "$data"
        let "count += 1"
    done; unset data
fi
